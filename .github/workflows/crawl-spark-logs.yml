name: Crawl Spark GitHub logs

on:
  workflow_dispatch:
    inputs:
      sinceDate:
        description: 'Since date'
        # default: '1 month ago'
        required: false
  schedule:
    - cron: '0 0 */7 * *'

jobs:
  crawl-spark-logs:
    # Changed to ubuntu-22.04 for Python 3.7 compatibility
    runs-on: ubuntu-22.04
    env:
      python: 3.7
    strategy:
      fail-fast: false
    steps:
      - name: Checkout predictive-testing repository
        # Updated from v2 to v4
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python ${{ env.python }}
        # Updated from v2 to v5
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}
          architecture: x64

      - name: Install Python packages (Python ${{ env.python }})
        run: |
          python -m pip install -r ./bin/requirements.txt

      - name: Get ID of the last successful workflow run
        # Updated from v4 to v7 and improved script robustness
        uses: actions/github-script@v7
        id: latest-workflow-status
        if: ${{ github.event_name == 'schedule' || github.event.inputs.sinceDate == '' }}
        with:
          result-encoding: string
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'crawl-spark-logs.yml',
              per_page: 2,
              status: 'success' // We only want artifacts from successful runs
            });
            // The API returns runs in descending order. The first run in the list
            // is the current one, so the second one is the most recent previous run.
            if (runs.data.workflow_runs.length > 1) {
              return runs.data.workflow_runs[1].id;
            }
            return '';

      - name: Download artifact from the last successful run
        # Replaced deprecated curl method with the official download-artifact action
        if: ${{ steps.latest-workflow-status.outputs.result != '' }}
        uses: actions/download-artifact@v4
        with:
          name: spark-github-logs
          path: latest_output
          run-id: ${{ steps.latest-workflow-status.outputs.result }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if latest output exists
        # Updated from v1 to v3
        uses: andstor/file-existence-action@v3
        id: check-if-latest-output-exists
        with:
          files: "latest_output/.run-meta.json"

      - name: Check if resume file exists
        # Updated from v1 to v3
        uses: andstor/file-existence-action@v3
        id: check-if-resume-file-exists
        with:
          files: "latest_output/.resume-meta.lst"

      - name: Use `sinceDate` for `--since` option
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.sinceDate != '' }}
        run: |
          SINCE_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ" -d '${{ github.event.inputs.sinceDate }}'`
          echo "SINCE_DATE=${SINCE_DATE}" >> $GITHUB_ENV

      - name: Compute `--since` option value from the latest run meta
        if: ${{ github.event_name == 'schedule' &&
          steps.check-if-latest-output-exists.outputs.files_exists == 'true' &&
          steps.check-if-resume-file-exists.outputs.files_exists == 'false' }}
        run: |
          SINCE_DATE=`cat latest_output/.run-meta.json | jq --raw-output .until`
          echo "SINCE_DATE=${SINCE_DATE}" >> $GITHUB_ENV

      - name: Get `--since` value from the latest run meta
        if: ${{ github.event_name == 'schedule' &&
          steps.check-if-latest-output-exists.outputs.files_exists == 'true' &&
          steps.check-if-resume-file-exists.outputs.files_exists == 'true' }}
        run: |
          SINCE_DATE=`cat latest_output/.run-meta.json | jq --raw-output .since`
          echo "SINCE_DATE=${SINCE_DATE}" >> $GITHUB_ENV

      - name: Set a default value for `--since` option
        if: ${{ env.SINCE_DATE == '' }}
        run: |
          SINCE_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ" -d '7 days ago'`
          echo "SINCE_DATE=${SINCE_DATE}" >> $GITHUB_ENV

      - name: Run script to collect GitHub logs
        if: ${{ steps.check-if-resume-file-exists.outputs.files_exists == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.LOG_CRAWLER_API_KEY }}
        run: |
          ./bin/crawl-spark-github-logs.sh --output output --overwrite --since "${{ env.SINCE_DATE }}"

      - name: Resume last run to collect GitHub logs
        if: ${{ steps.check-if-resume-file-exists.outputs.files_exists == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.LOG_CRAWLER_API_KEY }}
        run: |
          mv latest_output output
          ./bin/crawl-spark-github-logs.sh --output output --resume

      - name: Appends the collected logs into `models/spark/logs/github-logs.json`
        if: success()
        run: cat output/github-logs.json >> models/spark/logs/github-logs.json

      - name: Create Pull Request
        # Updated from v3 to v6
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Appends the collected logs (since='${{ env.SINCE_DATE }}') into `models/spark/logs/github-logs.json`
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: crawl-spark-logs-${{ github.job }}-${{ github.run_id }}
          delete-branch: true
          title: Appends the collected logs (since='${{ env.SINCE_DATE }}') into `models/spark/logs/github-logs.json`
          body: |
            Automated changes by the `${{ github.job }}` workflow (run_id=${{ github.run_id }}).

      - name: Upload output as artifact
        # Updated from v2 to v4
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spark-github-logs
          path: output/*